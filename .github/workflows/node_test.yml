name: Node Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC every day

jobs:
  node_tests:
    name: Run Node Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2

    # Install Foundry
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly

    - name: Install RISC0
      uses: ./.github/actions/install-risc0
      with:
        version: 1.2.4

    # Cache Docker layers
    - name: Set up Docker cache
      uses: actions/cache@v3
      with:
        path: /tmp/docker-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-
      
    # Load Docker cache if exists
    - name: Load Docker cache
      run: |
        if [ -f /tmp/docker-cache/cache.tar ]; then
          docker load < /tmp/docker-cache/cache.tar
        fi
      
    # Run mock tests for regular pushes/PRs
    - name: Run node tests with mocks
      if: github.event_name != 'schedule'
      run: |
        RISC0_DEV_MODE=true docker compose up --build -d
        sleep 5  # Wait for services to start
        make run-node-tests-mock
      
    # Run full tests for nightly builds
    - name: Run full node tests
      if: github.event_name == 'schedule'
      run: |
        RISC0_DEV_MODE=false docker compose up --build -d
        sleep 5  # Wait for services to start
        make run-node-tests
      
    # Save Docker cache
    - name: Save Docker cache
      if: always()
      run: |
        mkdir -p /tmp/docker-cache
        docker save $(docker images -q) > /tmp/docker-cache/cache.tar
      
    # Cleanup
    - name: Cleanup
      if: always()
      run: docker compose down