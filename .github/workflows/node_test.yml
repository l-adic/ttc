name: Node Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC every day

jobs:
  node_tests:
    name: Run Node Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: nightly

    - name: Install RISC0
      uses: ./.github/actions/install-risc0
      with:
        version: 1.2.4
    
    # Login to DockerHub with access token
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    # Set up Docker and Docker Compose
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Set up Docker Compose
      uses: ndeloof/install-compose-action@v0.0.1
      with:
        version: v2.23.3  # Specify a recent version that supports --cache-from
    
    # Try to pull cache images (with separate tags for cache)
    - name: Pull cache images
      continue-on-error: true  # Continue even if images don't exist yet
      run: |
        docker pull elladic/ttc-prover-server:cache || true
        docker pull elladic/anvil-node:cache || true
    
    # Build Docker images
    - name: Build Docker images
      run: |
        # Build prover-server image
        DOCKER_BUILDKIT=1 docker build \
          --tag elladic/ttc-prover-server:local \
          --cache-from elladic/ttc-prover-server:cache \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          -f docker/prover-server/Dockerfile .
        
        # Build anvil-node image
        DOCKER_BUILDKIT=1 docker build \
          --tag elladic/anvil-node:local \
          --cache-from elladic/anvil-node:cache \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          -f ./docker/anvil/Dockerfile ./docker/anvil
        
        # Configure docker-compose
        echo "PROVER_SERVER_IMAGE=elladic/ttc-prover-server:local" > .env
        echo "ETHEREUM_NODE_IMAGE=elladic/anvil-node:local" >> .env
    
    # Run mock tests for regular pushes/PRs
    - name: Run node tests with mocks
      if: github.event_name != 'schedule'
      run: |
        RISC0_DEV_MODE=true docker compose up -d
        sleep 5  # Wait for services to start
        make run-node-tests-mock
    
    # Run full tests for nightly builds
    - name: Run full node tests
      if: github.event_name == 'schedule'
      run: |
        RISC0_DEV_MODE=false docker compose up -d
        sleep 5  # Wait for services to start
        make run-node-tests
    
    
    # Always push cache images for faster subsequent builds
    - name: Push cache images
      if: success()
      run: |
        docker tag elladic/ttc-prover-server:local elladic/ttc-prover-server:cache
        docker push elladic/ttc-prover-server:cache
        docker tag elladic/anvil-node:local elladic/anvil-node:cache
        docker push elladic/anvil-node:cache

    # Push release tags only on main branch
    - name: Push release images
      if: github.ref == 'refs/heads/main' && success()
      run: |
        # Get short SHA
        SHA=$(git rev-parse --short HEAD)
        
        # Tag and push release versions
        for image in ttc-prover-server anvil-node; do
          docker tag elladic/$image:local elladic/$image:$SHA
          docker tag elladic/$image:local elladic/$image:latest
          docker push elladic/$image:$SHA
          docker push elladic/$image:latest
        done
    
    # Cleanup
    - name: Cleanup
      if: always()
      run: docker compose down
