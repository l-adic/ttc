services:
  ethereum-node:
    image: ${ETHEREUM_NODE_IMAGE:-}
    build:
      context: ./docker/anvil
      dockerfile: Dockerfile
    ports:
      - "${ETH_PORT:-8545}:8545"
    environment:
      - CHAIN_ID=${CHAIN_ID:-31337}
      - ACCOUNTS=${ACCOUNTS:-10}
      - BALANCE=${BALANCE:-100000}
    command: >
      anvil
      --host 0.0.0.0
      --port 8545
      --chain-id ${CHAIN_ID:-31337}
      --accounts ${ACCOUNTS:-10}
      --balance ${BALANCE:-100000}
      
#  prover-server:
#    image: ${PROVER_SERVER_IMAGE:-}
#    build:
#      context: .
#      dockerfile: docker/prover-server/Dockerfile
#    ports:
#      - "${PROVER_PORT:-8546}:8546"
#    depends_on:
#      - ethereum-node
#    environment:
#      - RUST_LOG=${RUST_LOG:-info}
#      - RISC0_DEV_MODE=${RISC0_DEV_MODE:-true}
#    command: >
#      sh -c "/app/target/release/prover-server 
#      --node-url http://ethereum-node:${ETH_PORT:-8545} 
#      --json-rpc-port ${PROVER_PORT:-8546}"

  postgres:
    image: postgres:15
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
#  monitor-server:
#    image: ${MONITOR_SERVER_IMAGE:-}
#    build:
#      context: .
#      dockerfile: docker/monitor-server/Dockerfile
#    ports:
#      - "${MONITOR_PORT:-8547}:8547"
#    depends_on:
#      - ethereum-node
#      - postgres
#      - prover-server
#    environment:
#      - RUST_LOG=${RUST_LOG:-info}
#      - DB_HOST=postgres
#      - DB_PORT=5432
#      - DB_USER=postgres
#      - DB_PASSWORD=postgres
#      - DB_NAME=ttc
#      - NODE_HOST=ethereum-node
#      - NODE_PORT=${ETH_PORT:-8545}
#      - PROVER_HOST=prover-server
#      - PROVER_PORT=${PROVER_PORT:-8546}
#      - JSON_RPC_PORT=${MONITOR_PORT:-8547}
#    command: >
#      sh -c "/app/target/release/monitor-server"
